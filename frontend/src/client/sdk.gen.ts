// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { ListAllDrinksDrinksGetData, ListAllDrinksDrinksGetResponses, AddNewDrinkDrinksPostData, AddNewDrinkDrinksPostResponses, AddNewDrinkDrinksPostErrors, FetchDrinkImagesDrinksImagesPostData, FetchDrinkImagesDrinksImagesPostResponses, FetchDrinkImagesDrinksImagesPostErrors, ToggleFavoriteStatusDrinksDrinkIdFavoritePatchData, ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponses, ToggleFavoriteStatusDrinksDrinkIdFavoritePatchErrors, GetRandomDrinkDrinksRandomGetData, GetRandomDrinkDrinksRandomGetResponses, GenerateDrinkFromIngredientsDrinksGeneratePostData, GenerateDrinkFromIngredientsDrinksGeneratePostResponses, GenerateDrinkFromIngredientsDrinksGeneratePostErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * List All Drinks
 */
export const listAllDrinksDrinksGet = <ThrowOnError extends boolean = false>(options?: Options<ListAllDrinksDrinksGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListAllDrinksDrinksGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/drinks',
        ...options
    });
};

/**
 * Add New Drink
 */
export const addNewDrinkDrinksPost = <ThrowOnError extends boolean = false>(options: Options<AddNewDrinkDrinksPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddNewDrinkDrinksPostResponses, AddNewDrinkDrinksPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/drinks',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Fetch Drink Images
 */
export const fetchDrinkImagesDrinksImagesPost = <ThrowOnError extends boolean = false>(options: Options<FetchDrinkImagesDrinksImagesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<FetchDrinkImagesDrinksImagesPostResponses, FetchDrinkImagesDrinksImagesPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/drinks/images',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Toggle Favorite Status
 */
export const toggleFavoriteStatusDrinksDrinkIdFavoritePatch = <ThrowOnError extends boolean = false>(options: Options<ToggleFavoriteStatusDrinksDrinkIdFavoritePatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponses, ToggleFavoriteStatusDrinksDrinkIdFavoritePatchErrors, ThrowOnError>({
        responseType: 'json',
        url: '/drinks/{drink_id}/favorite',
        ...options
    });
};

/**
 * Get Random Drink
 */
export const getRandomDrinkDrinksRandomGet = <ThrowOnError extends boolean = false>(options?: Options<GetRandomDrinkDrinksRandomGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRandomDrinkDrinksRandomGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/drinks/random',
        ...options
    });
};

/**
 * Generate Drink From Ingredients
 */
export const generateDrinkFromIngredientsDrinksGeneratePost = <ThrowOnError extends boolean = false>(options: Options<GenerateDrinkFromIngredientsDrinksGeneratePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GenerateDrinkFromIngredientsDrinksGeneratePostResponses, GenerateDrinkFromIngredientsDrinksGeneratePostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/drinks/generate',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};