// This file is auto-generated by @hey-api/openapi-ts

/**
 * DrinkRecipe
 */
export type DrinkRecipe = {
    /**
     * Id
     */
    id?: string | null;
    /**
     * Name
     */
    name: string;
    /**
     * Ingredients
     */
    ingredients: Array<Ingredient>;
    /**
     * Instructions
     */
    instructions: Array<string>;
    /**
     * Alcoholcontent
     */
    alcoholContent: boolean;
    type: DrinkType;
    /**
     * Imageurl
     */
    imageUrl?: string | null;
    /**
     * Isfavorite
     */
    isFavorite: boolean;
};

/**
 * DrinkType
 */
export enum DrinkType {
    COCKTAIL = "Cocktail",
    MOCKTAIL = "Mocktail",
    SHOT = "Shot",
    SMOOTHIE = "Smoothie",
    MILKSHAKE = "Milkshake",
    PUNCH = "Punch",
    COFFEE_DRINK = "Coffee Drink",
    TEA_DRINK = "Tea Drink",
    HOT_CHOCOLATE = "Hot Chocolate"
}
/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ImageSearchRequest
 */
export type ImageSearchRequest = {
    /**
     * Name
     */
    name: string;
    /**
     * Count
     */
    count: number;
    /**
     * Page
     */
    page: number;
};

/**
 * Ingredient
 */
export type Ingredient = {
    /**
     * Name
     */
    name: string;
    /**
     * Amount
     */
    amount: number;
    unit: Unit;
};

/**
 * Unit
 */
export enum Unit {
    GRAM = "g",
    MILLILITER = "ml",
    TEASPOON = "tsp",
    TABLESPOON = "tbsp",
    PIECE = "piece",
    DASH = "dash",
    TOP_UP = "top_up"
}
/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type ListAllDrinksDrinksGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/drinks';
};

export type ListAllDrinksDrinksGetResponses = {
    /**
     * Response List All Drinks Drinks Get
     * Successful Response
     */
    200: Array<DrinkRecipe>;
};

export type ListAllDrinksDrinksGetResponse = ListAllDrinksDrinksGetResponses[keyof ListAllDrinksDrinksGetResponses];

export type AddNewDrinkDrinksPostData = {
    body: DrinkRecipe;
    path?: never;
    query?: never;
    url: '/drinks';
};

export type AddNewDrinkDrinksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddNewDrinkDrinksPostError = AddNewDrinkDrinksPostErrors[keyof AddNewDrinkDrinksPostErrors];

export type AddNewDrinkDrinksPostResponses = {
    /**
     * Successful Response
     */
    200: DrinkRecipe;
};

export type AddNewDrinkDrinksPostResponse = AddNewDrinkDrinksPostResponses[keyof AddNewDrinkDrinksPostResponses];

export type FetchDrinkImagesDrinksImagesPostData = {
    body: ImageSearchRequest;
    path?: never;
    query?: never;
    url: '/drinks/images';
};

export type FetchDrinkImagesDrinksImagesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FetchDrinkImagesDrinksImagesPostError = FetchDrinkImagesDrinksImagesPostErrors[keyof FetchDrinkImagesDrinksImagesPostErrors];

export type FetchDrinkImagesDrinksImagesPostResponses = {
    /**
     * Response Fetch Drink Images Drinks Images Post
     * Successful Response
     */
    200: Array<string>;
};

export type FetchDrinkImagesDrinksImagesPostResponse = FetchDrinkImagesDrinksImagesPostResponses[keyof FetchDrinkImagesDrinksImagesPostResponses];

export type ToggleFavoriteStatusDrinksDrinkIdFavoritePatchData = {
    body?: never;
    path: {
        /**
         * Drink Id
         */
        drink_id: string;
    };
    query?: never;
    url: '/drinks/{drink_id}/favorite';
};

export type ToggleFavoriteStatusDrinksDrinkIdFavoritePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ToggleFavoriteStatusDrinksDrinkIdFavoritePatchError = ToggleFavoriteStatusDrinksDrinkIdFavoritePatchErrors[keyof ToggleFavoriteStatusDrinksDrinkIdFavoritePatchErrors];

export type ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponses = {
    /**
     * Successful Response
     */
    200: DrinkRecipe;
};

export type ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponse = ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponses[keyof ToggleFavoriteStatusDrinksDrinkIdFavoritePatchResponses];

export type GetRandomDrinkDrinksRandomGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/drinks/random';
};

export type GetRandomDrinkDrinksRandomGetResponses = {
    /**
     * Successful Response
     */
    200: DrinkRecipe;
};

export type GetRandomDrinkDrinksRandomGetResponse = GetRandomDrinkDrinksRandomGetResponses[keyof GetRandomDrinkDrinksRandomGetResponses];

export type GenerateDrinkFromIngredientsDrinksGeneratePostData = {
    /**
     * Ingredients
     */
    body: Array<string>;
    path?: never;
    query?: never;
    url: '/drinks/generate';
};

export type GenerateDrinkFromIngredientsDrinksGeneratePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GenerateDrinkFromIngredientsDrinksGeneratePostError = GenerateDrinkFromIngredientsDrinksGeneratePostErrors[keyof GenerateDrinkFromIngredientsDrinksGeneratePostErrors];

export type GenerateDrinkFromIngredientsDrinksGeneratePostResponses = {
    /**
     * Successful Response
     */
    200: DrinkRecipe;
};

export type GenerateDrinkFromIngredientsDrinksGeneratePostResponse = GenerateDrinkFromIngredientsDrinksGeneratePostResponses[keyof GenerateDrinkFromIngredientsDrinksGeneratePostResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};